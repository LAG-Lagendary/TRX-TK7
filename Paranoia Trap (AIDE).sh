#!/bin/bash
# =========================================================================
# PARANOIA TRAP (AIDE) SETUP SCRIPT
# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç AIDE –∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç CRON-–∑–∞–¥–∞—á—É –¥–ª—è –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞.
# !!! –í–ê–ñ–ù–û: –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¢–û–õ–¨–ö–û –û–ü–û–í–ï–©–ê–ï–¢, –ù–û –ù–ï –û–ë–ù–û–í–õ–Ø–ï–¢ –ë–ê–ó–£ !!!
# =========================================================================

# Check for root privileges
if [ "$EUID" -ne 0 ]; then
    echo "üö® –°–∫—Ä–∏–ø—Ç '–õ–æ–≤—É—à–∫–∞ –ü–∞—Ä–∞–Ω–æ–∏' –î–û–õ–ñ–ï–ù –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω –æ—Ç –∏–º–µ–Ω–∏ root –∏–ª–∏ —Å –ø–æ–º–æ—â—å—é sudo."
    exit 1
fi

LOG_DIR="/var/log/system_monitoring"
ALARM_FILE="$LOG_DIR/ALERT_SYSTEM_INTEGRITY_VIOLATION.log"
CRON_JOB_NAME="AIDE_INTEGRITY_CHECK"
AIDE_DB="/var/lib/aide/aide.db"
TEMP_REPORT="/tmp/aide_check_report.tmp"

echo "====================================================="
echo "üí• ACTIVATING PARANOIA TRAP (AIDE)"
echo "====================================================="

# 1. Create log directory
mkdir -p "$LOG_DIR"
chmod 700 "$LOG_DIR"
echo "‚öôÔ∏è Log directory created: $LOG_DIR"

# 2. Initialize AIDE database
echo "üîê Initializing AIDE database (this may take a few minutes)..."
/usr/bin/aide --init
if [ -f /var/lib/aide/aide.db.new ]; then
    mv /var/lib/aide/aide.db.new "$AIDE_DB"
    echo "‚úÖ AIDE database created. System state is 'ideal'."
else
    echo "‚ùå –û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å aide.db. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é AIDE."
    exit 1
fi

# 3. Setup CRON job script (Corrected - NO AUTO-UPDATE!)
AIDE_RUN_SCRIPT="/usr/local/sbin/aide_monitor_script.sh"

cat <<EOF > "$AIDE_RUN_SCRIPT"
#!/bin/bash
# AIDE Integrity Check Monitor Script (Corrected)
AIDE_DB="$AIDE_DB"
TEMP_REPORT="$TEMP_REPORT"
LOG_FILE="$ALARM_FILE"

# –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏
/usr/bin/aide --check > \$TEMP_REPORT 2>&1

if [ -s \$TEMP_REPORT ]; then
    # Change detected!

    # 1. Create/Update the critical alarm log
    echo "!!! –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –¢–†–ï–í–û–ì–ê (AIDE) - –ù–ê–†–£–®–ï–ù–ò–ï –¶–ï–õ–û–°–¢–ù–û–°–¢–ò –§–ê–ô–õ–û–í–û–ô –°–ò–°–¢–ï–ú–´ !!!" > \$LOG_FILE
    echo "–î–∞—Ç–∞/–í—Ä–µ–º—è: \$(date)" >> \$LOG_FILE
    echo "-------------------------------------------------------------" >> \$LOG_FILE
    echo "WARNING: RESPONSE MECHANISM ACTIVATED. DO NOT TOUCH." >> \$LOG_FILE
    echo "" >> \$LOG_FILE

    # 2. Add summary of changes
    grep 'Total number of entries added' \$TEMP_REPORT >> \$LOG_FILE
    grep 'Total number of entries removed' \$TEMP_REPORT >> \$LOG_FILE
    grep 'Total number of entries changed' \$TEMP_REPORT >> \$LOG_FILE

    # 3. Add pointer to the full report and move it
    echo "" >> \$LOG_FILE
    REPORT_PATH="/var/log/system_monitoring/aide_report_latest.log"
    echo "Full report saved to: \$REPORT_PATH" >> \$LOG_FILE
    mv \$TEMP_REPORT \$REPORT_PATH

    echo "‚ùå Change detected. Alarm file updated. AIDE database REMAINS UNCHANGED (Evidence preserved)."

    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–∏–≥–Ω–∞–ª–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è MOTD –∏–ª–∏ Rsyslog)
    logger -t CRITICAL_ALARM "AIDE Integrity Violation Detected. Full report at \$REPORT_PATH"

else
    # Status NOMINAL
    echo "üü¢ \$(date): System NOMINAL. Integrity check passed." > \$LOG_FILE
    rm -f /var/log/system_monitoring/aide_report_latest.log 2>/dev/null
    rm -f \$TEMP_REPORT 2>/dev/null
fi
EOF

chmod +x "$AIDE_RUN_SCRIPT"
echo "‚úÖ Monitoring script created: $AIDE_RUN_SCRIPT"

# 4. Add CRON job: run script every 5 minutes
CRON_ENTRY="*/5 * * * * $AIDE_RUN_SCRIPT"
(crontab -l 2>/dev/null | grep -v "$CRON_JOB_NAME" ; echo "$CRON_ENTRY # $CRON_JOB_NAME") | crontab -
echo "‚úÖ CRON-–∑–∞–¥–∞–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ (–∑–∞–ø—É—Å–∫ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç)."

echo "====================================================="
echo "‚úÖ –õ–û–í–£–®–ö–ê –ü–ê–†–ê–ù–û–ò –ê–ö–¢–ò–í–ò–†–û–í–ê–ù–ê. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—á–Ω–µ—Ç—Å—è —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç."
